build: false
platform:
  - x64
clone_folder: C:\projects\doctrine-firebird-driver
clone_depth: 2

only_commits:
  files:
    - .appveyor.yml
    - composer.*
    - src\
    - tests\

cache:
  - C:\ProgramData\chocolatey\bin -> .appveyor.yml
  - C:\tools\php -> .appveyor.yml
  - C:\tools\composer -> .appveyor.yml
  - '%LOCALAPPDATA%\Composer\files -> composer.json'

## Build matrix for lowest and highest possible targets
environment:
  matrix:
    - db: firebird
      db_version: 3.0.12
      php: 8.1

init:
  - SET PATH=C:\Program Files\OpenSSL;c:\tools\php;C:\tools\composer;%PATH%
  - SET COMPOSER_NO_INTERACTION=1
  - SET ANSICON=121x90 (121x90)

install:
  # Upgrade to 0.10.16-beta to benefit from a bugfix for
  # https://github.com/chocolatey/choco/issues/1843
  - ps: choco upgrade chocolatey --pre
  # Install Firebird and start the service, then set SYSDBA password
  - ps: |
      choco install --no-progress $env:db --version=$env:db_version
      "C:\\Program Files\\Firebird\\Firebird_3_0\\bin\\gsec.exe -user sysdba -password masterkey -modify sysdba -pw masterkey"
      if (!(Test-Path "C:\\Program Files\\Firebird\\Firebird_3_0\\data")) {
        New-Item -path "C:\\Program Files\\Firebird\\Firebird_3_0\\" -name data -itemtype directory
      }
      if (!(Test-Path C:\projects\doctrine-firebird-driver\database)) {
        New-Item -path "C:\projects\doctrine-firebird-driver" -name database -ItemType Directory
        New-Item -path "C:\projects\doctrine-firebird-driver\database" -name phpunit-integration-tests.fdb -ItemType File
      }

  - ps: |
      # Check if installation is cached
      if (!(Test-Path c:\tools\php)) {
        appveyor-retry choco install --no-progress --params '""/InstallDir:C:\tools\php""' --ignore-checksums -y php --version ((choco search php --exact --all-versions -r | select-string -pattern $env:php | sort { [version]($_ -split '\|' | select -last 1) } -Descending | Select-Object -first 1) -replace '[php|]','')
        Get-ChildItem -Path c:\tools\php
        cd c:\tools\php     
        # Set PHP environment items that are always needed
        copy php.ini-production php.ini
        Add-Content php.ini "`n date.timezone=UTC"
        Add-Content php.ini "`n extension_dir=ext"
        Add-Content php.ini "`n memory_limit=1G"
        Add-Content php.ini "`n extension=php_openssl.dll"
        Add-Content php.ini "`n extension=php_mbstring.dll"
        Add-Content php.ini "`n extension=php_fileinfo.dll"
        Add-Content php.ini "`n extension=php_curl.dll"
      
        $FirebirdDLLVersion = "php_8.1.0-interbase-3.0.1-win-x64-nts.dll"
        cd c:\tools\php\ext
        $source = "https://github.com/FirebirdSQL/php-firebird/releases/download/v3.0.1/$($FirebirdDLLVersion)"
        $destination = "c:\tools\php\ext\$($FirebirdDLLVersion)"
        Invoke-WebRequest $source -OutFile $destination
        $DLLVersion = (Invoke-WebRequest "https://pecl.php.net/rest/r/pcov/stable.txt").Content
        Invoke-WebRequest https://windows.php.net/downloads/pecl/releases/pcov/$($DLLVersion)/php_pcov-$($DLLVersion)-$($env:php)-nts-vs16-$($env:platform).zip -OutFile pcov.zip
        7z x -y pcov.zip > $null
        Remove-Item c:\tools\php\* -include .zip
        cd c:\tools\php
        Add-Content php.ini "`nextension=$($FirebirdDLLVersion)"
        Add-Content php.ini "`nextension=php_pcov.dll"
        Add-Content php.ini "`n"
      
        # download Composer
        if (!(Test-Path C:\tools\composer)) {
          New-Item -path c:\tools -name composer -itemtype directory
        }
        if (!(Test-Path c:\tools\composer\composer.phar)) {
          appveyor-retry appveyor DownloadFile https://getcomposer.org/composer.phar -Filename C:\tools\composer\composer.phar
          Set-Content -path 'C:\tools\composer\composer.bat' -Value ('@php C:\tools\composer\composer.phar %*')
        }
      }
  # install composer dependencies
  - cd C:\projects\doctrine-firebird-driver
  - appveyor-retry composer self-update
  - appveyor-retry composer install --ignore-platform-req=ext-posix --no-progress --quiet --prefer-dist


test_script:
  - ps: >-
      vendor\bin\phpunit -c tests\phpunit-appveyor.xml --coverage-clover clover.xml

      if ($LastExitCode -ne 0) {
        $host.SetShouldExit($LastExitCode)
      }

after_test:
  - appveyor DownloadFile https://codecov.io/bash -FileName codecov.sh
  - bash codecov.sh -f clover.xml
